{"version":3,"sources":["dataChat.js"],"names":["chatSelectionsFun","req","res","text","body","DataChat","user","_id","axios","post","question","resopne","console","log","data","status","json","error","message","msg","chatSimSimFun","request","roomState","roomId","sentence","resultList","Array","simsimroom","SimSim","room","simsim","save","push","find","filterCh","sort","id","limit","select","chat","reverse","reqChat","map","result","i","arr","length","reqFinal","forEach","item","roomNumber","Number","sender","res1","response","indexOf","bot","simChat","chatSimSimRoom","SimSimRoom","title","chatSimSimGet","date","simsimRoomById","next","findById","match"],"mappings":"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","sourcesContent":["import User from '../models/User';\r\nimport axios from 'axios';\r\nimport SimSim from '../models/SimSimChat';\r\nimport SimSimRoom from '../models/SimSimRoom';\r\nimport {\r\n    filterKrFinlter\r\n} from '../middlewares/chatbot';\r\n\r\nexport const chatSelectionsFun = async (req, res) => {\r\n    try {\r\n        const {\r\n            text\r\n        } = req.body;\r\n\r\n        await new DataChat({\r\n            text,\r\n            user: req.user._id,\r\n        });\r\n\r\n        const resopne = await axios.post('http://155.230.24.126:3050/returnchatselections', {\r\n            question: text,\r\n        });\r\n\r\n        console.log(resopne.data);\r\n        res.status(200).json(resopne.data);\r\n    } catch (err) {\r\n        console.error(err.message);\r\n        res.status(500).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const chatSimSimFun = async (req, res) => {\r\n    try {\r\n        const {\r\n            text\r\n        } = req.body;\r\n        let request = {\r\n            roomState: '2',\r\n            roomId: '999',\r\n            sentence: text,\r\n        };\r\n\r\n        let resopne = '';\r\n        let simChat;\r\n        let resultList = new Array();\r\n        let res1;\r\n        console.log(req.simsimroom);\r\n        const simsim = await new SimSim({\r\n            text,\r\n            user: req.user._id,\r\n            room: req.simsimroom._id,\r\n        });\r\n        await simsim.save();\r\n        resultList.push(simsim);\r\n\r\n        // const serviceFilter = await filterKrFinlter(request);\r\n        // console.log('setTtsCheck:', serviceFilter);\r\n\r\n        // if (serviceFilter == '1') resopne = 'https://www.google.com/maps/';\r\n\r\n        // if (serviceFilter == '2') resopne = 'https://www.youtube.com';\r\n\r\n        // if (serviceFilter == '3') resopne = 'https://mail.google.com';\r\n\r\n        // if (serviceFilter == '4') resopne = 'https://www.google.com/calendar';\r\n\r\n        // if (serviceFilter == '5') resopne = 'https://contacts.google.com';\r\n\r\n        // if (serviceFilter == '7') resopne = 'https://www.weather.go.kr/w/weather/today.do';\r\n\r\n        // if (serviceFilter == '15') resopne = 'https://movie.naver.com';\r\n        // else {\r\n        let chat = await SimSim.find({\r\n            user: req.user._id,\r\n            room: req.simsimroom,\r\n            filterCh: false,\r\n        })\r\n            .sort({\r\n                id: -1,\r\n            })\r\n            .limit(5)\r\n            .select('text -_id');\r\n        console.log(chat);\r\n        chat.reverse();\r\n\r\n        console.log(chat);\r\n\r\n        const reqChat = chat.map((result, i, arr) => {\r\n            if (arr.length - 1 === i) {\r\n                return result.text;\r\n            } else if (i === 0) {\r\n                return '>' + result.text + '\\n>';\r\n            } else return result.text + '\\n>';\r\n        });\r\n\r\n        let reqFinal = '';\r\n\r\n        reqChat.forEach((item) => {\r\n            reqFinal += item;\r\n        });\r\n\r\n        let roomNumber = Number(req.simsimroom.id);\r\n\r\n        res1 = await axios.post('http://155.230.24.126:3050/returnchatresponse', {\r\n            sender: 'user',\r\n            question: reqFinal,\r\n            roomNumber,\r\n        });\r\n        console.log(res1.data);\r\n        //  }\r\n        // if (res1) {\r\n        //     simChat = await new SimSim({\r\n        //         text: res1.data.response,\r\n        //         user: req.user._id,\r\n        //         room: req.simsimroom._id,\r\n        //         bot: true,\r\n        //     });\r\n        // } else {\r\n        //     simChat = await new SimSim({\r\n        //         text: resopne,\r\n        //         user: req.user._id,\r\n        //         room: req.simsimroom._id,\r\n        //         bot: true,\r\n        //         filterCh: true,\r\n        //     });\r\n        // }\r\n\r\n\r\n        if (res1.data.response.indexOf('https') != -1) {\r\n            simChat = await new SimSim({\r\n                text: res1.data.response,\r\n                user: req.user._id,\r\n                room: req.simsimroom._id,\r\n                bot: true,\r\n                filterCh: true,\r\n            });\r\n        } else {\r\n            simChat = await new SimSim({\r\n                text: res1.data.response,\r\n                user: req.user._id,\r\n                room: req.simsimroom._id,\r\n                bot: true,\r\n            });\r\n        }\r\n\r\n        await simChat.save();\r\n        resultList.push(simChat);\r\n\r\n        res.status(200).json(resultList);\r\n    } catch (err) {\r\n        console.error(err.message);\r\n        res.status(500).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const chatSimSimRoom = async (req, res) => {\r\n    try {\r\n        const room = await new SimSimRoom({\r\n            title: 'parseon',\r\n            user: req.user._id,\r\n        });\r\n        await room.save();\r\n\r\n        res.json(room._id);\r\n    } catch (err) {\r\n        console.error(err.message);\r\n        res.status(500).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const chatSimSimGet = async (req, res) => {\r\n    try {\r\n        const chat = await SimSim.find({\r\n            user: req.user._id,\r\n            room: req.simsimroom._id,\r\n        }).sort({\r\n            date: 1,\r\n        });\r\n\r\n        res.json(chat);\r\n    } catch (err) {\r\n        console.error(err.message);\r\n        res.status(500).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const simsimRoomById = async (req, res, next, id) => {\r\n    try {\r\n        const room = await SimSimRoom.findById(id);\r\n        if (!id.match(/^[0-9a-fA-F]{24}$/) || !room) {\r\n            return res.status(404).json({\r\n                msg: 'Room not found',\r\n            });\r\n        }\r\n\r\n        req.simsimroom = room;\r\n        next();\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(400).json({\r\n            msg: 'Server Error',\r\n        });\r\n    }\r\n};"],"file":"dataChat.js"}