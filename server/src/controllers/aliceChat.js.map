{"version":3,"sources":["aliceChat.js"],"names":["aliceRoomById","req","res","next","id","AliceRoom","findById","room","match","status","json","msg","aliceRoom","console","error","getRoom","_id","populate","club","AliceChat","find","sort","date","chat","params","aliceRoomId","log","message","rooms","created","deleteRoom","axios","remove","updateClub","form","formidable","IncomingForm","keepExtensions","parse","err","fields","files","users","push","user","classmonitor","photo","data","fs","readFileSync","path","contentType","type","save","createRoom","post","roomId","Number","set","send","resopne","resultList","Array","body","sentence","text","language","responeSentiment","mode","responeFilter","serviceFilter","serviceCode","serviceValue","chatBotmode","botmode","responeChatBot","sentiment","findOne","bot","botChat","getUser","userJoin","filter","toString","length","end","deleteUser","userId","query","removeIndex","map","indexOf","splice","modeUpdate","_","extend"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport formidable from 'formidable';\r\nimport _ from 'lodash';\r\nimport fs from 'fs';\r\nimport AliceChat from '../models/AliceChat';\r\nimport AliceRoom from '../models/AliceRoom';\r\n\r\nexport const aliceRoomById = async (req, res, next, id) => {\r\n    try {\r\n        const room = await AliceRoom.findById(id);\r\n        if (!id.match(/^[0-9a-fA-F]{24}$/) || !room) {\r\n            return res.status(404).json({\r\n                msg: 'Room not found',\r\n            });\r\n        }\r\n\r\n        req.aliceRoom = room;\r\n        next();\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(400).json({\r\n            msg: 'Server Error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const getRoom = async (req, res) => {\r\n    try {\r\n        let club = await AliceRoom.findById(req.aliceRoom._id).populate('users', '_id name').populate('classmonitor', '_id name');\r\n        const chat = await AliceChat.find({\r\n            room: req.aliceRoom._id,\r\n        })\r\n            .populate('user', '_id name photo')\r\n            .sort({\r\n                date: 1,\r\n            });\r\n\r\n        if (!req.params.aliceRoomId.match(/^[0-9a-fA-F]{24}$/) || !club) {\r\n            return res.status(404).json({\r\n                msg: 'Club not found',\r\n            });\r\n        }\r\n\r\n        // if (club.users.filter(user => user._id.toString() === req.user.id).length > 0) {\r\n        //     return res.status(200).json({\r\n        //         club,\r\n        //         chat\r\n        //     });\r\n        // }\r\n        // club.users.push(req.user.id);\r\n        // await club.save();\r\n        // club = await Club.findById(req.params.clubId)\r\n        //     .populate('users', '_id name')\r\n        //     .populate('classmonitor', '_id name');\r\n        // console.log('3', club.users);\r\n        // club = await Club.findById(req.params.clubId)\r\n        //     .populate('users', '_id name')\r\n        //     .populate('classmonitor', '_id name');\r\n\r\n        res.json({\r\n            club,\r\n            chat,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        return res.status(400).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const rooms = async (req, res) => {\r\n    try {\r\n        const rooms = await AliceRoom.find().populate('users', '_id name').populate('classmonitor', '_id name').sort({\r\n            created: -1,\r\n        });\r\n\r\n        res.json(rooms);\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(400).json({\r\n            msg: 'Server Error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteRoom = async (req, res) => {\r\n    try {\r\n        const club = await AliceRoom.findById(req.aliceRoom._id);\r\n\r\n        if (!req.params.aliceRoomId.match(/^[0-9a-fA-F]{24}$/) || !club) {\r\n            return res.status(404).json({\r\n                msg: 'Club not found',\r\n            });\r\n        }\r\n\r\n        await axios.delete(`http://localhost:4500/api/chatbot/en/${club.id}`);\r\n        await club.remove();\r\n\r\n        res.json({\r\n            msg: 'Club deleted successfully'\r\n        });\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(400).json({\r\n            msg: 'Server Error',\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateClub = async (req, res) => {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.keepExtensions = true;\r\n\r\n        form.parse(req, async (err, fields, files) => {\r\n            if (err) {\r\n                return res.status(400).json({\r\n                    msg: 'Image could not be uploaded',\r\n                });\r\n            }\r\n\r\n            let club = await new AliceRoom(fields);\r\n            club.users.push(req.user._id);\r\n            club.classmonitor = req.user._id;\r\n            if (files.photo) {\r\n                club.photo.data = fs.readFileSync(files.photo.path);\r\n                club.photo.contentType = files.photo.type;\r\n            }\r\n            await club.save();\r\n\r\n            res.json(club);\r\n        });\r\n\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(400).json({\r\n            msg: 'Server Error',\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const createRoom = async (req, res) => {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.keepExtensions = true;\r\n        form.parse(req, async (err, fields, files) => {\r\n            if (err) {\r\n                return res.status(400).json({\r\n                    msg: 'Image could not be uploaded',\r\n                });\r\n            }\r\n\r\n            let club = await new AliceRoom(fields);\r\n            club.users.push(req.user._id);\r\n            club.classmonitor = req.user._id;\r\n            if (files.photo) {\r\n                club.photo.data = fs.readFileSync(files.photo.path);\r\n                club.photo.contentType = files.photo.type;\r\n            }\r\n            await club.save();\r\n\r\n            await axios.post('http://localhost:4500/api/chatbot/en', {\r\n                roomId: Number(club.id),\r\n            });\r\n            res.json(club);\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(400).json({\r\n            msg: 'Server Error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const photo = async (req, res, next) => {\r\n    const club = await AliceRoom.findById(req.aliceRoom._id);\r\n\r\n    if (club.photo.data) {\r\n        res.set('Content-Type', club.photo.contentType);\r\n        return res.send(club.photo.data);\r\n    } else {\r\n        res.json('err');\r\n    }\r\n};\r\n\r\nexport const send = async (req, res) => {\r\n    try {\r\n        const club = await AliceRoom.findById(req.aliceRoom._id);\r\n        let responeChatBot;\r\n        let resopne = null;\r\n        let resultList = new Array();\r\n        if (!req.params.aliceRoomId.match(/^[0-9a-fA-F]{24}$/) || !club) {\r\n            return res.status(404).json({\r\n                msg: 'Club not found',\r\n            });\r\n        }\r\n        console.log('body: ', req.body);\r\n\r\n        //sentiment\r\n        let responeSentiment = await axios.post('http://localhost:4500/api/chatbot/sentiment', {\r\n            sentence: req.body.text,\r\n            language: club.language,\r\n            roomId: club.id,\r\n        });\r\n        console.log('sentiemt: ', responeSentiment.data);\r\n\r\n        if (club.mode != 'lock') {\r\n\r\n            let responeFilter = await axios.post('http://localhost:4500/api/chatbot/filter', {\r\n                sentence: req.body.text,\r\n                language: club.language,\r\n                roomId: club.id,\r\n            });\r\n\r\n            console.log('filter: ', responeFilter.data);\r\n\r\n            let serviceFilter = responeFilter.data.serviceCode;\r\n\r\n            let serviceValue = responeFilter.data.serviceValue;\r\n\r\n            if (club.language === 'kr') {\r\n                if (serviceFilter == '1') resopne = 'https://www.google.com/maps/';\r\n\r\n                if (serviceFilter == '2') resopne = 'https://www.youtube.com';\r\n\r\n                if (serviceFilter == '3') resopne = 'https://mail.google.com';\r\n\r\n                if (serviceFilter == '4') resopne = 'https://www.google.com/calendar';\r\n\r\n                if (serviceFilter == '5') resopne = 'https://contacts.google.com';\r\n\r\n                if (serviceFilter == '7') resopne = 'https://www.weather.go.kr/w/weather/today.do';\r\n\r\n                if (serviceFilter == '15') resopne = 'https://movie.naver.com';\r\n\r\n                else {\r\n                    if (club.mode === 'max') {\r\n                        responeChatBot = await axios.post('http://localhost:4500/api/chatbot/kr/message', {\r\n                            sentence: req.body.text,\r\n                            mode: club.mode,\r\n                            chatBotmode: club.botmode,\r\n                        });\r\n                    }\r\n                }\r\n\r\n            } else if (club.language === 'en') {\r\n                if (serviceFilter === 0)\r\n                    resopne = \"https://www.google.com/maps/search/?api=1&query=\" + serviceValue;\r\n                if (serviceFilter === 1)\r\n                    resopne = \"https://www.youtube.com/results?search_query=\" + serviceValue;\r\n                if (serviceFilter === 2)\r\n                    resopne = \"https://en.wikipedia.org/wiki/\" + serviceValue;\r\n                if (serviceFilter === 4)\r\n                    resopne = 'https://www.google.com/calendar';\r\n                if (serviceFilter === 6)\r\n                    resopne = 'https://mail.google.com';\r\n                if (serviceFilter === 7)\r\n                    resopne = \"https://www.skyscanner.co.kr\";\r\n                if (serviceFilter === 8)\r\n                    resopne = \"https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=\" + serviceValue;\r\n                if (serviceFilter === 9)\r\n                    resopne = \"https://www.tripadvisor.co.kr/Search-q\" + serviceValue;\r\n                if (serviceFilter == 15)\r\n                    resopne = 'https://movie.naver.com';\r\n                else {\r\n                    if (club.mode === 'max') {\r\n                        responeChatBot = await axios.post('http://localhost:4500/api/chatbot/en/message', {\r\n                            sentence: req.body.text,\r\n                            mode: club.mode,\r\n                            chatBotmode: club.botmode,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            let chat;\r\n            let botChat;\r\n\r\n            chat = await new AliceChat({\r\n                text: req.body.text,\r\n                sentiment: responeSentiment.data.sentiment,\r\n            });\r\n\r\n            chat.user = req.user._id;\r\n            chat.room = req.aliceRoom._id;\r\n            await chat.save();\r\n\r\n            chat = await AliceChat.findOne({\r\n                _id: chat._id,\r\n            })\r\n                .populate('user', '_id name')\r\n                .sort({\r\n                    date: 1,\r\n                });\r\n\r\n\r\n\r\n            resultList.push(chat);\r\n            if (resopne) {\r\n                console.log(resopne);\r\n                botChat = await new AliceChat({\r\n                    text: resopne,\r\n                    bot: true,\r\n                    sentiment: responeSentiment.data.sentiment,\r\n                });\r\n                console.log('lg-col-1');\r\n            }\r\n            if (club.mode === 'max' && !resopne) {\r\n                botChat = await new AliceChat({\r\n                    text: responeChatBot.data.sentence,\r\n                    bot: true,\r\n                });\r\n                console.log('2');\r\n            }\r\n\r\n            if (botChat) {\r\n                botChat.room = req.aliceRoom._id;\r\n                await botChat.save();\r\n\r\n                resultList.push(botChat);\r\n            }\r\n\r\n            return res.status(200).json(resultList);\r\n        } else {\r\n            let resultList = new Array();\r\n            let chat = await new AliceChat({\r\n                text: req.body.text,\r\n                sentiment: responeSentiment.data.sentiment,\r\n            });\r\n            chat.user = req.user._id;\r\n            chat.room = req.aliceRoom._id;\r\n            await chat.save();\r\n\r\n            chat = await AliceChat.findOne({\r\n                _id: chat._id,\r\n            })\r\n                .populate('user', '_id name')\r\n                .sort({\r\n                    date: 1,\r\n                });\r\n            resultList.push(chat);\r\n            return res.status(200).json(resultList);\r\n        }\r\n\r\n        // res.status(200).json(chat);\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        res.status(400).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const getUser = async (req, res) => {\r\n    try {\r\n        const club = await AliceRoom.findById(req.aliceRoom._id).populate('users', '_id name');\r\n        res.status(200).json(club.users);\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        res.status(400).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const userJoin = async (req, res) => {\r\n    try {\r\n        let club = await AliceRoom.findById(req.aliceRoom._id).populate('users', '_id name').populate('classmonitor', '_id name');\r\n\r\n        if (!req.params.aliceRoomId.match(/^[0-9a-fA-F]{24}$/) || !club) {\r\n            return res.status(404).json({\r\n                msg: 'Club not found',\r\n            });\r\n        }\r\n\r\n        if (club.users.filter((user) => user._id.toString() === req.user._id.toString()).length > 0) {\r\n            return res.status(200).end();\r\n        }\r\n        club.users.push(req.user._id);\r\n        await club.save();\r\n        // club = await Club.findById(req.params.clubId)\r\n        //     .populate('users', '_id name')\r\n        //     .populate('classmonitor', '_id name');\r\n\r\n        // club = await Club.findById(req.params.clubId)\r\n        //     .populate('users', '_id name')\r\n        //     .populate('classmonitor', '_id name');\r\n\r\n        res.status(200).end();\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        return res.status(400).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = async (req, res) => {\r\n    try {\r\n        const {\r\n            userId\r\n        } = req.query;\r\n        const club = await AliceRoom.findOne({\r\n            _id: req.aliceRoom._id,\r\n        });\r\n\r\n        if (club.users.filter((user) => user._id.toString() === userId.toString()).length === 0) {\r\n            console.log('sdsds');\r\n            return res.status(400).json({\r\n                msg: 'User has not yet been User',\r\n            });\r\n        }\r\n        const removeIndex = club.users.map((user) => user._id.toString()).indexOf(userId.toString());\r\n\r\n        club.users.splice(removeIndex, 1);\r\n\r\n        await club.save();\r\n\r\n        res.status(200).json(userId);\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        return res.status(400).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const modeUpdate = async (req, res) => {\r\n    try {\r\n        // let room = await AliceRoom.findById(req.aliceRoom._id);\r\n        // if (!room) {\r\n        //     res.status(400).json({\r\n        //         msg: 'Invalid Credntials'\r\n        //     });\r\n        // }\r\n\r\n        // console.log(req.body);\r\n        // room = _.extend(room, req.body);\r\n        // await room.save();\r\n        // res.json(room);\r\n\r\n        let form = new formidable.IncomingForm();\r\n\r\n        form.keepExtensions = true;\r\n        let room = await AliceRoom.findById(req.aliceRoom._id).populate('users', '_id name').populate('classmonitor', '_id name');\r\n\r\n        await form.parse(req, async (err, fields, files) => {\r\n            if (err) {\r\n                next(err);\r\n                return;\r\n            }\r\n            if (!room) {\r\n                return res.status(400).json({\r\n                    msg: 'Invalid Credntials',\r\n                });\r\n            }\r\n            if (room.classmonitor._id.toString() !== req.user._id.toString()) {\r\n                return res.status(400).json({\r\n                    msg: 'classmonitor not sam',\r\n                });\r\n            }\r\n            room = _.extend(room, fields);\r\n            await room.save();\r\n            res.status(200).json(room)\r\n        });\r\n\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        return res.status(400).json({\r\n            msg: 'server error',\r\n        })\r\n    }\r\n};"],"file":"aliceChat.js"}