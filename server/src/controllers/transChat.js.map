{"version":3,"sources":["transChat.js"],"names":["transRoomById","req","res","next","id","TransRoom","findById","room","match","status","json","msg","transRoom","console","error","getRoom","_id","populate","club","TransChat","find","sort","date","chat","params","transRoomId","TransUser","findOne","user","transUser","trans","chats","mode","log","message","rooms","created","deleteRoom","axios","remove","updateClub","form","formidable","IncomingForm","keepExtensions","parse","err","fields","files","_","extend","createRoom","users","push","classmonitor","photo","data","fs","readFileSync","path","contentType","type","save","post","roomId","Number","set","send","resultList","Array","text","body","pattern_eng","test","sentence","language","responeSentiment","sentiment","transSend","chatId","getUser","userJoin","filter","toString","length","end","deleteUser","userId","query","removeIndex","map","indexOf","splice","modeUpdate"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport formidable from 'formidable';\r\nimport _ from 'lodash';\r\nimport fs from 'fs';\r\nimport TransChat from '../models/TransChat';\r\nimport TransRoom from '../models/TransRoom';\r\nimport TransUser from '../models/TransUser';\r\nimport { trans, transPromi } from '../middlewares/trans';\r\n\r\nexport const transRoomById = async (req, res, next, id) => {\r\n    try {\r\n        const room = await TransRoom.findById(id);\r\n        if (!id.match(/^[0-9a-fA-F]{24}$/) || !room) {\r\n            return res.status(404).json({\r\n                msg: 'Room not found',\r\n            });\r\n        }\r\n\r\n        req.transRoom = room;\r\n        next();\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(400).json({\r\n            msg: 'Server Error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const getRoom = async (req, res) => {\r\n    try {\r\n        let chats;\r\n        let club = await TransRoom.findById(req.transRoom._id).populate('users', '_id name').populate('classmonitor', '_id name');\r\n\r\n        const chat = await TransChat.find({\r\n            room: req.transRoom._id,\r\n        })\r\n            .populate('user', '_id name photo')\r\n            .sort({\r\n                date: 1,\r\n            });\r\n\r\n        if (!req.params.transRoomId.match(/^[0-9a-fA-F]{24}$/) || !club) {\r\n            return res.status(404).json({\r\n                msg: 'Club not found',\r\n            });\r\n        }\r\n\r\n        const transUser = await TransUser.findOne({\r\n            user: req.user._id,\r\n            room: req.transRoom._id\r\n        });\r\n\r\n\r\n        chats = await transPromi(chat, transUser.trans);\r\n\r\n\r\n        res.json({\r\n            club,\r\n            chat: chats,\r\n            mode: transUser\r\n        });\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        return res.status(400).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const rooms = async (req, res) => {\r\n    try {\r\n        const rooms = await TransRoom.find().populate('users', '_id name').populate('classmonitor', '_id name').sort({\r\n            created: -1,\r\n        });\r\n\r\n        res.json(rooms);\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(400).json({\r\n            msg: 'Server Error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteRoom = async (req, res) => {\r\n    try {\r\n        const club = await TransRoom.findById(req.transRoom._id);\r\n\r\n        if (!req.params.transRoomId.match(/^[0-9a-fA-F]{24}$/) || !club) {\r\n            return res.status(404).json({\r\n                msg: 'Club not found',\r\n            });\r\n        }\r\n\r\n        await axios.delete(`http://155.230.24.126:4500/api/chatbot/en/${club.id}`);\r\n        await club.remove();\r\n\r\n        res.json({\r\n            msg: 'Club deleted successfully'\r\n        });\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(400).json({\r\n            msg: 'Server Error',\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const updateClub = async (req, res) => {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.keepExtensions = true;\r\n\r\n        form.parse(req, async (err, fields, files) => {\r\n            if (err) {\r\n                return res.status(400).json({\r\n                    msg: 'Image could not be uploaded',\r\n                });\r\n            }\r\n\r\n            let user = await TransUser.findOne({ user: req.user._id, room: req.transRoom._id });\r\n            if (!user) {\r\n                res.status(400).json({\r\n                    msg: 'Invalid Credntials'\r\n                });\r\n            }\r\n\r\n            user = await _.extend(user, fields);\r\n\r\n\r\n\r\n            res.json(user);\r\n        });\r\n\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(400).json({\r\n            msg: 'Server Error',\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const createRoom = async (req, res) => {\r\n    try {\r\n        let form = new formidable.IncomingForm();\r\n        form.keepExtensions = true;\r\n        form.parse(req, async (err, fields, files) => {\r\n            if (err) {\r\n                return res.status(400).json({\r\n                    msg: 'Image could not be uploaded',\r\n                });\r\n            }\r\n\r\n            let club = await new TransRoom(fields);\r\n            club.users.push(req.user._id);\r\n            club.classmonitor = req.user._id;\r\n            if (files.photo) {\r\n                club.photo.data = fs.readFileSync(files.photo.path);\r\n                club.photo.contentType = files.photo.type;\r\n            }\r\n            await club.save();\r\n\r\n            await axios.post('http://155.230.24.126:4500/api/chatbot/en', {\r\n                roomId: Number(club.id),\r\n            });\r\n            res.json(club);\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(400).json({\r\n            msg: 'Server Error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const photo = async (req, res, next) => {\r\n    const club = await TransRoom.findById(req.transRoom._id);\r\n\r\n    if (club.photo.data) {\r\n        res.set('Content-Type', club.photo.contentType);\r\n        return res.send(club.photo.data);\r\n    } else {\r\n        res.json('err');\r\n    }\r\n};\r\n\r\nexport const send = async (req, res) => {\r\n    try {\r\n        const club = await TransRoom.findById(req.transRoom._id);\r\n        let resultList = new Array();\r\n        if (!req.params.transRoomId.match(/^[0-9a-fA-F]{24}$/) || !club) {\r\n            return res.status(404).json({\r\n                msg: 'Club not found',\r\n            });\r\n        }\r\n        const { text } = req.body\r\n\r\n        let responeSentiment\r\n        let chat\r\n        //sentiment\r\n        var pattern_eng = /[a-zA-Z]/;\r\n        let result;\r\n        if (pattern_eng.test(text)) {\r\n\r\n            responeSentiment = await axios.post('http://155.230.24.126:4500/api/chatbot/sentiment', {\r\n                sentence: text,\r\n                language: 'en',\r\n                roomId: club.id,\r\n            });\r\n        } else {\r\n            responeSentiment = await axios.post('http://155.230.24.126:4500/api/chatbot/sentiment', {\r\n                sentence: text,\r\n                language: 'kr',\r\n                roomId: club.id,\r\n            });\r\n        }\r\n\r\n        chat = await new TransChat({\r\n            text: text,\r\n            sentiment: responeSentiment.data.sentiment,\r\n        });\r\n\r\n        chat.user = req.user._id;\r\n        chat.room = req.transRoom._id;\r\n        await chat.save();\r\n\r\n        chat = await TransChat.findOne({\r\n            _id: chat._id,\r\n        })\r\n            .populate('user', '_id name')\r\n            .sort({\r\n                date: 1,\r\n            });\r\n\r\n        let user = await TransUser.findOne({ user: req.user._id, room: req.transRoom._id });\r\n\r\n\r\n        chat.text = await trans(text, user.trans);\r\n\r\n\r\n\r\n        resultList.push(chat);\r\n\r\n\r\n        return res.status(200).json(resultList);\r\n\r\n        // res.status(200).json(chat);\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        res.status(400).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const transSend = async (req, res) => {\r\n    try {\r\n        const { chatId, text } = req.body\r\n        let resultList = new Array();\r\n        const transUser = await TransUser.findOne({ user: req.user._id, room: req.transRoom._id });\r\n        const chat = await TransChat.findOne({\r\n            _id: chatId\r\n        })\r\n            .populate('user', '_id name')\r\n            .sort({\r\n                date: 1,\r\n            });\r\n\r\n        chat.text = await trans(text, transUser.trans);\r\n        resultList.push(chat);\r\n\r\n\r\n        return res.status(200).json(resultList);\r\n\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        res.status(400).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUser = async (req, res) => {\r\n    try {\r\n        const club = await TransRoom.findById(req.transRoom._id).populate('users', '_id name');\r\n        res.status(200).json(club.users);\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        res.status(400).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const userJoin = async (req, res) => {\r\n    try {\r\n        let club = await TransRoom.findById(req.transRoom._id).populate('users', '_id name').populate('classmonitor', '_id name');\r\n\r\n        if (!req.params.transRoomId.match(/^[0-9a-fA-F]{24}$/) || !club) {\r\n            return res.status(404).json({\r\n                msg: 'Club not found',\r\n            });\r\n        }\r\n\r\n        let transUser = await TransUser.findOne({ room: req.transRoom._id, user: req.user._id });\r\n        if (!transUser) {\r\n            transUser = await new TransUser({\r\n                user: req.user._id,\r\n                room: req.transRoom._id,\r\n            });\r\n            await transUser.save();\r\n        }\r\n\r\n        if (club.users.filter((user) => user._id.toString() === req.user._id.toString()).length > 0) {\r\n            return res.status(200).end();\r\n        }\r\n        club.users.push(req.user._id);\r\n        await club.save();\r\n        // club = await Club.findById(req.params.clubId)\r\n        //     .populate('users', '_id name')\r\n        //     .populate('classmonitor', '_id name');\r\n\r\n        // club = await Club.findById(req.params.clubId)\r\n        //     .populate('users', '_id name')\r\n        //     .populate('classmonitor', '_id name');\r\n\r\n        res.status(200).end();\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        return res.status(400).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const deleteUser = async (req, res) => {\r\n    try {\r\n        const {\r\n            userId\r\n        } = req.query;\r\n        const club = await TransRoom.findOne({\r\n            _id: req.transRoom._id,\r\n        });\r\n\r\n        if (club.users.filter((user) => user._id.toString() === userId.toString()).length === 0) {\r\n\r\n            return res.status(400).json({\r\n                msg: 'User has not yet been User',\r\n            });\r\n        }\r\n        const removeIndex = club.users.map((user) => user._id.toString()).indexOf(userId.toString());\r\n\r\n        club.users.splice(removeIndex, 1);\r\n\r\n        await club.save();\r\n\r\n        res.status(200).json(userId);\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        return res.status(400).json({\r\n            msg: 'server error',\r\n        });\r\n    }\r\n};\r\n\r\nexport const modeUpdate = async (req, res) => {\r\n    try {\r\n        // let room = await TransRoom.findById(req.transRoom._id);\r\n        // if (!room) {\r\n        //     res.status(400).json({\r\n        //         msg: 'Invalid Credntials'\r\n        //     });\r\n        // }\r\n\r\n        // console.log(req.body);\r\n        // room = _.extend(room, req.body);\r\n        // await room.save();\r\n        // res.json(room);\r\n\r\n        let form = new formidable.IncomingForm();\r\n\r\n        form.keepExtensions = true;\r\n        let room = await TransUser.findOne({ room: req.transRoom._id, user: req.user._id });\r\n\r\n\r\n        await form.parse(req, async (err, fields, files) => {\r\n            if (err) {\r\n                next(err);\r\n                return;\r\n            }\r\n            if (!room) {\r\n                return res.status(400).json({\r\n                    msg: 'Invalid Credntials',\r\n                });\r\n            }\r\n\r\n            room = _.extend(room, fields);\r\n            await room.save();\r\n            const chat = await TransChat.find({\r\n                room: req.transRoom._id,\r\n            })\r\n                .populate('user', '_id name photo')\r\n                .sort({\r\n                    date: 1,\r\n                });\r\n\r\n            let chats = await transPromi(chat, room.trans);\r\n            res.status(200).json({ mode: room, chat: chats })\r\n        });\r\n\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        return res.status(400).json({\r\n            msg: 'server error',\r\n        })\r\n    }\r\n};"],"file":"transChat.js"}