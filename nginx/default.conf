
events{
 worker_connections  1024;
}
http{
upstream client{
    least_conn;
    server client:3000 weight=10 max_fails=3 fail_timeout=30s;
    server client:3000 weight=10 max_fails=3 fail_timeout=30s;
    server client:3000 weight=10 max_fails=3 fail_timeout=30s;
    server client:3000 weight=10 max_fails=3 fail_timeout=30s;
    server client:3000 weight=10 max_fails=3 fail_timeout=30s;
}

upstream api{
    least_conn;
    server api:5000 weight=10 max_fails=3 fail_timeout=30s;
    server api:5000 weight=10 max_fails=3 fail_timeout=30s;
    server api:5000 weight=10 max_fails=3 fail_timeout=30s;
    server api:5000 weight=10 max_fails=3 fail_timeout=30s;
    server api:5000 weight=10 max_fails=3 fail_timeout=30s;
    
}

server{
    listen 80;
    server_name chatbot.neoali.com;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
    
    server {
    listen 443 ssl;
    server_name chatbot.neoali.com;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/chatbot.neoali.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/chatbot.neoali.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass  http://client;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

        location /sockjs-node{
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /api {
        rewrite /api/(.*) /$1 break;
        proxy_pass http://api;
    }


}

}
}


